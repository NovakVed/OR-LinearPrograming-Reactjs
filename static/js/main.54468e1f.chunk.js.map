{"version":3,"sources":["components/Product.jsx","components/Table.jsx","components/inc/Navbar.jsx","components/inc/Footer.jsx","components/Chart.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["Product","props","className","type","name","onChange","handleChange","autoComplete","id","value","onClick","addProduct","Table","items","data","products","map","item","key","scope","functionX","functionY","restriction","result","length","objectiveX","objectiveY","objectiveLimitation","Navbar","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","target","Footer","Chart","state","jxgboard","boundingbox","logicJS","b","counter","forEach","element","create","face","size","strokeColor","random_bg_color","strokeWidth","Math","floor","random","this","logic","boardAttributes","axis","showCopyright","grid","snapToGrid","withLabel","style","width","height","Component","App","feasible","bounded","allAroundResult","dotX","dotY","bind","functionSolver","event","setState","preventDefault","document","getElementById","prevState","generate","temp","Array","Number","index","push","getData","number","x","y","getDataFunctionX","getDataFunctionY","math","matrix","transposeMatrix","productName","solver","require","object","transpose","constraints","variables","Solve","console","log","onSubmit","handleSubmit","htmlFor","placeholder","outputResult","isUndefinedDotX","isUndefinedDotY","feasibleResult","boundedResult","explanation","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.54468e1f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Product(props) {\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">Dodaj proizvod</h5>\r\n                    <h6 className=\"card-subtitle mb-2 text-muted\">Ispod upišite sve potrebne podatke</h6>\r\n\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col-md-2\">\r\n                            <input type=\"text\" name=\"functionX\" onChange={props.handleChange} autoComplete=\"off\" className=\"form-control\" id=\"functionX\" />\r\n                            <small id=\"functionHelp\" className=\"form-text text-muted\">Primjer upisa: 12</small>\r\n                        </div>\r\n                        <h4 id=\"functionHelp\" className=\"form-text text-muted\">X&emsp;</h4>\r\n                        <h4 id=\"functionHelp\" className=\"form-text\">+&emsp;</h4>\r\n                        <div className=\"form-group col-md-2\">\r\n                            <input type=\"text\" name=\"functionY\" onChange={props.handleChange} autoComplete=\"off\" className=\"form-control\" id=\"functionY\" />\r\n                            <small id=\"functionHelp\" className=\"form-text text-muted\">Primjer upisa: -8</small>\r\n                        </div>\r\n                        <h4 id=\"functionHelp\" className=\"form-text text-muted\">Y&emsp;</h4>\r\n                        <div className=\"form-group col-md-2\">\r\n                            <select id=\"restriction\" name=\"restriction\" onChange={props.handleChange} className=\"form-control\">\r\n                                <option value=\"\">Odaberi</option>\r\n                                <option value=\"=\">=</option>\r\n                                <option value=\"≤\">≤</option>\r\n                                <option value=\"≥\">≥</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-group col-md-4\">\r\n                            <input type=\"text\" name=\"result\" onChange={props.handleChange} autoComplete=\"off\" className=\"form-control\" id=\"result\" />\r\n                            <small id=\"resultHelp\" className=\"form-text text-muted\">Primjer upisa: 36</small>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <button id=\"addProductButton\" className=\"btn btn-primary\" onClick={props.addProduct}>Dodaj proizvod</button>\r\n                </div>\r\n            </div>\r\n            <br></br>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Product;","import React from 'react';\r\n\r\nfunction Table(props) {\r\n    const items = props.data.products.map((item, key) => \r\n    <tr key={item.id}>\r\n        <th scope=\"row\">{key + 1}</th>\r\n        <td>{item.functionX}x + {item.functionY}y {item.restriction} {item.result}</td>\r\n        {/* <td><button className=\"btn btn-danger\">x</button></td> */}\r\n        \r\n    </tr>\r\n    )\r\n\r\n    if (items.length === 0) {\r\n        return (\r\n            <div>\r\n                <h3><strong>Funkcija cilja</strong> = {props.data.objectiveX}x + {props.data.objectiveY}y -> {props.data.objectiveLimitation} </h3>\r\n                <h3 className=\"text-center\">Prazno</h3>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n                <h3><strong>Funkcija cilja</strong> = {props.data.objectiveX}x + {props.data.objectiveY}y -> {props.data.objectiveLimitation} </h3>\r\n                <table className=\"table table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">Pravac</th>\r\n                            <th scope=\"col\">Formula</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {items}\r\n                    </tbody>\r\n                </table>\r\n                <p>x, y ≥ 0 --> uvjet nenegativnosti</p>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Table;","import React from 'react';\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <a className=\"navbar-brand\" href=\"https://novakved.github.io/my-app/\">Grafička metoda rješavanja problema LP</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item active\">\r\n                            <a className=\"nav-link\" href=\"https://novakved.github.io/my-app/\">Početna stranica <span className=\"sr-only\">(current)</span></a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"https://github.com/NovakVed/my-app\" target=\"_blank\">Pogledaj kod</a>\r\n                        </li>\r\n                        {/* <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"#\">Dokumentacija</a>\r\n                        </li> */}\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n            <br />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div>\r\n            <footer className=\"page-footer font-small sticky-bottom\">\r\n                <div className=\"footer-copyright text-center py-3\">© 2020 Copyright: Vedran Novak, 0016110860</div>\r\n                <div className=\"footer-copyright text-center py-3\">Fakulteta Organizacije i Informatike u Varaždinu</div>\r\n                <div className=\"footer-copyright text-center py-3\">Sveučilišta u Zagrebu</div>\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { Component, useState, useEffect } from 'react';\r\nimport JXGBoard from 'jsxgraph-react-js'\r\n\r\nclass Chart extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            jxgboard: props.jxgboard,\r\n            boundingbox: props.boundingbox,\r\n            key: props.key,\r\n            logicJS:{}\r\n        }\r\n\r\n        this.state.logicJS = (b) => {\r\n            let counter = 1\r\n            this.state.jxgboard.forEach(element => {\r\n                b.create('point',element, {name:''+ counter +'',face:'o', size:2})\r\n                if (counter == 2) {\r\n                    b.create('line',['1','2'], {strokeColor: this.random_bg_color(),strokeWidth:2})\r\n                    counter = 1\r\n                } else {\r\n                    counter++\r\n                }\r\n            });\r\n          }\r\n    }\r\n\r\n    /* Random number generator */\r\n    random_bg_color() {\r\n        var x = Math.floor(Math.random() * 256);\r\n        var y = Math.floor(Math.random() * 256);\r\n        var z = Math.floor(Math.random() * 256);\r\n        return \"rgb(\" + x + \",\" + y + \",\" + z + \")\";\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"chart\">\r\n                <JXGBoard\r\n                    key={this.state.key}\r\n                    logic={this.state.logicJS}\r\n                    boardAttributes={{\r\n                        axis: true,\r\n                        boundingbox: this.state.boundingbox,\r\n                        showCopyright: false,\r\n                        grid: true,\r\n                        snapToGrid: true,\r\n                        withLabel: true,\r\n                    }}\r\n\r\n                    style={{\r\n                        width: '100%',\r\n                        height: '600px'\r\n                    }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chart;","import React, {Component} from 'react';\r\nimport {generate} from 'shortid';\r\nimport {solver} from 'javascript-lp-solver';\r\nimport {math} from 'mathjs';\r\n\r\nimport './css/App.css';\r\nimport Product from './components/Product';\r\nimport Table from './components/Table';\r\nimport Navbar from './components/inc/Navbar';\r\nimport Footer from './components/inc/Footer';\r\nimport Chart from './components/Chart';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      objectiveX: \"\",\r\n      objectiveY: \"\",\r\n      objectiveLimitation: \"\",\r\n      functionX: \"\",\r\n      functionY: \"\",\r\n      restriction: \"\",\r\n      result: \"\",\r\n      feasible: false,\r\n      bounded: false,\r\n      allAroundResult: \"\",\r\n      dotX: \"\",\r\n      dotY: \"\",\r\n      products: [],\r\n      jxgboard: [],\r\n      boundingbox: [-1, 21, 21, -1]\r\n    }\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.addProduct = this.addProduct.bind(this)\r\n    this.functionSolver = this.functionSolver.bind(this)\r\n    /* this.getChartData = this.getChartData.bind(this) */\r\n  }\r\n\r\n  handleChange(event) {\r\n    const {name, value} = event.target\r\n    this.setState({ \r\n      [name]: value \r\n    })\r\n  }\r\n\r\n  addProduct(event) {\r\n    event.preventDefault()\r\n    document.getElementById(\"functionX\").value = \"\"\r\n    document.getElementById(\"functionY\").value = \"\"\r\n    document.getElementById(\"restriction\").value = \"\"\r\n    document.getElementById(\"result\").value = \"\"\r\n\r\n    this.setState(prevState => ({\r\n      products: [...prevState.products, \r\n        {\r\n          id: generate(),\r\n          functionX: this.state.functionX,\r\n          functionY: this.state.functionY,\r\n          restriction: this.state.restriction,\r\n          result: this.state.result\r\n        }]\r\n    }))\r\n\r\n    /* const temp: { functionX: number, functionY: number, result: number }[] */\r\n    var temp = new Array({ functionX: Number, functionY: Number, result: Number })\r\n    if (this.state.products.length > 0) {\r\n      for (let index = 0; index < this.state.products.length; index++) {\r\n        temp.push(this.state.products[index])\r\n      }\r\n    }\r\n\r\n    this.getData(this.state.functionX, this.state.functionY, this.state.result)\r\n  }\r\n\r\n  removeProduct(event) {\r\n\r\n  }\r\n\r\n    /* ---------------------------------- */\r\n    /* --------------------------------- */\r\n    /* ---------Set chartData---------- */\r\n    /* ------------------------------- */\r\n    /* ------------------------------ */\r\n\r\n\r\n  /* function to get value of x */\r\n  getDataFunctionX(functionX, functionY, result, number) {\r\n    var x = 0\r\n    x = (result - (functionY*number))/functionX\r\n    return x;\r\n  }\r\n\r\n  fillValueRestriction()  {\r\n    if (this.state.restriction === \"=\") {\r\n      return \"false\"\r\n    } else if (this.state.restriction === \"≤\") {\r\n      return \"bottom\"\r\n    } else {\r\n      return \"top\"\r\n    }\r\n  }\r\n\r\n  /* function to get value of y */\r\n  getDataFunctionY(functionX, functionY, result, number) {\r\n    var y = 0\r\n    y = (result - (functionX*number))/functionY\r\n    return y;\r\n  }\r\n\r\n  /* functionX and functionY are swapped because of the wrong output when drawing graph */\r\n  /* Gets line values in form of an object*/\r\n  getData(functionY, functionX, result) {\r\n    let x = 0\r\n    let y = 0\r\n\r\n    /* Ako x i y != 0 */\r\n    if (functionX != 0 && functionY != 0) {\r\n      /* Ako rezultat != 0 */\r\n      if (result != 0) {\r\n        /* For x = 0 */\r\n        x = 0\r\n        y = this.getDataFunctionX(functionX, functionY, result, 0)\r\n\r\n        this.state.jxgboard.push([x, y])\r\n\r\n        /* For y = 0 */\r\n        x = this.getDataFunctionY(functionX, functionY, result, 0)\r\n        y = 0\r\n\r\n        this.state.jxgboard.push([x, y])\r\n      } else {\r\n        if (functionX < 0 && functionY > 0 ) {\r\n          this.state.jxgboard.push([0, 0])\r\n          this.state.jxgboard.push([1, 1])\r\n        } else if ( functionX > 0 && functionY < 0 ){\r\n          this.state.jxgboard.push([0, 0])\r\n          this.state.jxgboard.push([1, 1])\r\n        } else {\r\n          this.state.jxgboard.push([0, 0])\r\n          this.state.jxgboard.push([-1, 1])\r\n        }\r\n      }\r\n    } else {\r\n      if (this.state.functionX != 0) {\r\n        /* Za y = 0 */\r\n        x = result / this.state.functionX\r\n        y = 0\r\n\r\n        this.state.jxgboard.push([x, y])\r\n        /* Za y = 1 */\r\n        x = result / this.state.functionX\r\n        y = 1\r\n\r\n        this.state.jxgboard.push([x, y])\r\n      } else if (this.state.functionY != 0){\r\n        /* Za x = 0 */\r\n        x = 0\r\n        y = result / this.state.functionY\r\n\r\n        this.state.jxgboard.push([x, y])\r\n        /* Za x = 1 */\r\n        x = 1\r\n        y = result / this.state.functionY\r\n\r\n        this.state.jxgboard.push([x, y])\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /* Function solver */\r\n  /* All programming logic */\r\n  functionSolver(event) {\r\n    event.preventDefault();\r\n    var solver = require('javascript-lp-solver')\r\n\r\n\r\n\r\n    /* ------------------------------- */\r\n    /* ------------------------------- */\r\n    /* ---------IF IT'S MIN----------- */\r\n    /* ------------------------------ */\r\n    /* ------------------------------ */\r\n\r\n\r\n    if (this.state.objectiveLimitation === \"max\") {\r\n      const object = {\r\n        \"optimize\": \"cost\",\r\n        \"opType\": \"max\",\r\n        \"constraints\": {\r\n        },\r\n        \"variables\": {\r\n          \"x\": {},\r\n          \"y\": {}\r\n        }\r\n      }\r\n  \r\n      /* Matrix */\r\n      /* Requires library math.js */\r\n      var math = require('mathjs')\r\n      var matrix = new Array()\r\n      var transposeMatrix = math.matrix()\r\n  \r\n      this.state.products.forEach(element => {\r\n        matrix.push([element.functionX, element.functionY, element.result])\r\n      });\r\n      transposeMatrix = math.transpose(matrix)\r\n  \r\n      /* Constraints */\r\n      const arrayCapacity = new Array();\r\n      var productName = 1\r\n      this.state.products.forEach(element => {\r\n        var restriction = \"\"\r\n        if (element.restriction === \"=\") {\r\n          restriction = \"equal\"\r\n        } else if (element.restriction === \"≤\") {\r\n          restriction = \"max\"\r\n        } else {\r\n          restriction = \"min\"\r\n        }\r\n        object.constraints[productName] = {\r\n          [restriction]: element.result\r\n        }\r\n  \r\n        productName++\r\n      });\r\n  \r\n      /* Variables */\r\n      object.variables.x[\"cost\"] = this.state.objectiveX\r\n      object.variables.y[\"cost\"] = this.state.objectiveY\r\n      for (let index = 0; index < transposeMatrix.length - 1; index++) {\r\n        var productName = 1\r\n        if (index === 0) {\r\n          transposeMatrix[index].forEach(element => {\r\n            object.variables.x[productName] = element\r\n            productName++\r\n          });\r\n        } \r\n        if (index === 1) {\r\n          transposeMatrix[index].forEach(element => {\r\n            object.variables.y[productName] = element\r\n            productName++\r\n          });\r\n        }\r\n      }\r\n  \r\n      const result = solver.Solve(object);\r\n\r\n      this.setState({\r\n        feasible: result.feasible,\r\n        bounded: result.bounded,\r\n        allAroundResult: result.result,\r\n        dotX: result.x,\r\n        dotY: result.y\r\n      })\r\n\r\n      console.log(result)\r\n    } else {\r\n\r\n\r\n\r\n      /* ------------------------------- */\r\n      /* ------------------------------- */\r\n      /* ---------IF IT'S MIN----------- */\r\n      /* ------------------------------ */\r\n      /* ------------------------------ */\r\n\r\n\r\n\r\n      \r\n      const object = {\r\n        \"optimize\": \"cost\",\r\n        \"opType\": \"min\",\r\n        \"constraints\": {\r\n        },\r\n        \"variables\": {\r\n          \"x\": {},\r\n          \"y\": {}\r\n        }\r\n      }\r\n  \r\n      /* Matrix */\r\n      /* Requires library math.js */\r\n      var math = require('mathjs')\r\n      var matrix = new Array()\r\n      var transposeMatrix = math.matrix()\r\n  \r\n      this.state.products.forEach(element => {\r\n        matrix.push([element.functionX, element.functionY, element.result])\r\n      });\r\n\r\n      transposeMatrix = math.transpose(matrix)  \r\n      /* Constraints */\r\n      const arrayCapacity = new Array();\r\n      var productName = 1\r\n      this.state.products.forEach(element => {\r\n        var restriction = \"\"\r\n        if (element.restriction === \"=\") {\r\n          restriction = \"equal\"\r\n        } else if (element.restriction === \"≤\") {\r\n          restriction = \"max\"\r\n        } else {\r\n          restriction = \"min\"\r\n        }\r\n        object.constraints[productName] = {\r\n          [restriction]: element.result\r\n        }\r\n  \r\n        productName++\r\n      });\r\n  \r\n      /* Variables */\r\n      object.variables.x[\"cost\"] = this.state.objectiveX\r\n      object.variables.y[\"cost\"] = this.state.objectiveY\r\n      for (let index = 0; index < transposeMatrix.length - 1; index++) {\r\n        var productName = 1\r\n        if (index === 0) {\r\n          transposeMatrix[index].forEach(element => {\r\n            object.variables.x[productName] = element\r\n            productName++\r\n          });\r\n        } \r\n        if (index === 1) {\r\n          transposeMatrix[index].forEach(element => {\r\n            object.variables.y[productName] = element\r\n            productName++\r\n          });\r\n        }\r\n      }\r\n  \r\n      const result = solver.Solve(object);\r\n\r\n      this.setState({\r\n        feasible: result.feasible,\r\n        bounded: result.bounded,\r\n        allAroundResult: result.result,\r\n        dotX: result.x,\r\n        dotY: result.y\r\n      })\r\n\r\n      console.log(result)\r\n    }\r\n  }\r\n\r\n\r\n  isUndefinedDotX(x) {\r\n    if (typeof x == \"undefined\") {\r\n      return 0\r\n    } else if(x == \"\") {\r\n      return 0\r\n    } else if(this.state.allAroundResult == \"-0\") {\r\n      return 0\r\n    } else {\r\n      return x\r\n    }\r\n  }\r\n\r\n  isUndefinedDotY(y) {\r\n    if (typeof y == \"undefined\") {\r\n      return 0\r\n    } else if(y == \"\") {\r\n      return 0\r\n    } else if(this.state.allAroundResult == \"-0\") {\r\n      return 0\r\n    } else {\r\n      return y      \r\n    }\r\n  }\r\n\r\n  outputResult() {\r\n    if (this.state.allAroundResult == \"Infinity\") {\r\n      return \"Beskonačno\"\r\n    } else if (this.state.allAroundResult == \"-0\") {\r\n      return \"Ne postoji moguče rješenje za ovaj problem\"\r\n    } else if (this.state.allAroundResult == \"0\") {\r\n      return \"Ne postoji moguče rješenje za ovaj problem\"\r\n    } else if (this.state.allAroundResult < 0) {\r\n      return \"Beskonačno\"\r\n    } else {\r\n      return this.state.allAroundResult\r\n    }\r\n  }\r\n\r\n  feasibleResult() {\r\n    if (this.state.feasible) {\r\n      return \"da\"\r\n    } else {\r\n      return \"ne\"\r\n    }\r\n  }\r\n\r\n  boundedResult() {\r\n    if (this.state.bounded) {\r\n      return \"ograničen\"\r\n    } else {\r\n      return \"nije ograničen\"\r\n    }\r\n  }\r\n\r\n  explanation() {\r\n    if (this.state.feasible === true && this.state.bounded === true) {\r\n      if (this.state.allAroundResult < 0) {\r\n        return \"Postoji multiplicitet optimalnih rješenja (beskonačno mnogo rješenja)\"\r\n      }\r\n      return \"Zajednički prostor rješenja je ograničeno, te rješenje je optimalno\"\r\n    } else if (this.state.allAroundResult == \"-0\") {\r\n      return \"Ne postoji moguče rješenje za ovaj problem\"\r\n    } else if (this.state.feasible  === true && this.state.bounded === false) {\r\n      return \"Zajednički prostor rješenja nije ograničeno, ali je izvedivo\"\r\n    } else if (this.state.feasible  === false && this.state.bounded === true) {\r\n      return \"Zajednički prostor rješenja je ograničeno, ali rješenje nikad nije optimalno\"\r\n    } else if (typeof this.state.dotX  == \"undefined\" && typeof this.state.dotY == \"undefined\") {\r\n      return \"Rješenje postoji, ali nikad nije optimalno, (0, 0) nikad nije optimalno, jer tada tvornica posluje kao da nikada ne proizvodi, što nikada ne može biti optimalni odgovor\"\r\n    } else {\r\n      return \"Rješenje ne postoji!\"\r\n    }\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        {/* Navbar */}\r\n        <Navbar />\r\n        <div className=\"container\">\r\n          <h1 className=\"text-center\">Grafička metoda rješavanja problema LP</h1>\r\n          <br />\r\n          <br />\r\n          <form onSubmit={this.handleSubmit}>\r\n\r\n            {/* Maximize or Minimize */}\r\n            <div className=\"input-group mb-3\">\r\n              <div className=\"input-group-prepend\">\r\n                <label className=\"input-group-text\" htmlFor=\"objectiveLimitation\">Max/Min</label>\r\n              </div>\r\n              <select \r\n                value={this.state.objectiveLimitation}\r\n                className=\"custom-select\" \r\n                onChange={this.handleChange}\r\n                name=\"objectiveLimitation\" \r\n                id=\"objectiveLimitation\"> \r\n\r\n                  <option value=\"\">Odaberi...</option>\r\n                  <option value=\"max\">Max</option>\r\n                  <option value=\"min\">Min</option>\r\n\r\n                {/* <option value=\"both\">Max/Min</option> */}\r\n              </select>\r\n            </div>\r\n\r\n            {/* Objective function */}\r\n            <div className=\"for-group\">\r\n            <label htmlFor=\"objective\">Funkcija cilja</label>\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <input type=\"text\" \r\n                    className=\"form-control\" \r\n                    name=\"objectiveX\" \r\n                    placeholder=\"Prva varijabla\" \r\n                    onChange={this.handleChange}\r\n                    autoComplete=\"off\"\r\n                  />\r\n                </div>\r\n                <h4 id=\"functionHelp\" className=\"form-text text-muted\">X&emsp;</h4>\r\n                <h3>+</h3>\r\n                <div className=\"col\">\r\n                  <input type=\"text\" \r\n                    className=\"form-control\" \r\n                    name=\"objectiveY\"  \r\n                    placeholder=\"Druga varijabla\" \r\n                    onChange={this.handleChange}\r\n                    autoComplete=\"off\"\r\n                  />\r\n                </div>\r\n                <h4 id=\"functionHelp\" className=\"form-text text-muted\">Y&emsp;</h4>\r\n              </div>\r\n              <small id=\"objectiveHelp\" className=\"form-text text-muted\">Primjer upisa: 12x + 40y</small>\r\n            </div>\r\n            <br />\r\n\r\n            {/* Product */}\r\n            <Product \r\n              addProduct={this.addProduct}\r\n              handleChange={this.handleChange}\r\n            />\r\n\r\n            <Table \r\n              data={this.state}\r\n            />\r\n\r\n            <br></br>\r\n            <br></br>\r\n            <button className=\"btn btn-danger\">Reset</button>\r\n            <button className=\"btn btn-primary float-right\" onClick={this.functionSolver}>Izračunaj</button>\r\n          </form>\r\n          <br></br>\r\n          <br></br>\r\n          <br></br>\r\n          <p className=\"card-subtitle mb-2 text-muted\">U slučaju da ne možete vidjeti upisane pravce, koristite opciju zoomiranja na grafu dok ne možete vidjeti vaše pravce</p>\r\n          <br></br>\r\n          <Chart key={generate()} jxgboard={this.state.jxgboard} boundingbox={this.state.boundingbox}/>\r\n          <br></br>\r\n          <br></br>\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h2 className=\"card-title\">Rješenje</h2>\r\n              <h6 className=\"card-subtitle mb-2 text-muted\">Pokrenite aplikaciju kako bi vidjeli rješenje</h6>\r\n              <p className=\"card-text\"><strong>Funkcija cilja:</strong> {this.outputResult()}</p>\r\n              <p className=\"card-text\">M({this.isUndefinedDotX(this.state.dotX)}, {this.isUndefinedDotY(this.state.dotY)})</p>\r\n              <p className=\"card-text\">x = {this.isUndefinedDotX(this.state.dotX)}</p>\r\n              <p className=\"card-text\">y = {this.isUndefinedDotY(this.state.dotY)}</p>\r\n              <p className=\"card-text\">Izvediva (da/ne) = {this.feasibleResult()}</p>\r\n              <p className=\"card-text\">Zajedničko područje rješenja (ograničeno/nije ograničeno) = {this.boundedResult()}</p>\r\n            </div>\r\n          </div>\r\n          <br></br>\r\n          <br></br>\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h2 className=\"card-title\">Objašnjenje</h2>\r\n              <p className=\"card-text\">{this.explanation()}</p>\r\n            </div>\r\n          </div>\r\n          \r\n        </div>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n/* Bootstrap frameworks */\r\nimport $ from 'jquery';\r\nimport Popper from 'popper.js';\r\n\r\n/* CSS Frameworks */\r\nimport 'bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/js/bootstrap.js';\r\n\r\n/* Custom CSS */\r\nimport './css/index.css';\r\n\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}